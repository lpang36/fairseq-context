train test val
(| delim trg) (| delim src) (, delim (| delim path))

-write a script to do the split

->

train test val
trg (space delim) src (space delim) leaf (space delim (| delim)) path (space delim (| delim))

-modify fairseq/tokenizer.py to add a tokenizer which splits by both space and |
-in preprocess.py use --joined-dictionary for src and trg, add an option to use the new tokenizer and use --only-source to process leaf and path

->

dicts for trg/src leaf path

-add an equivalent to translation task under fairseq/tasks which also takes leaf and path files
-add an equivalent to LanguagePairWithContextDataset under fairseq/data which also takes leaf and path datasets
-under load_dataset add indexed_dataset calls for leaf and path and feed the result to the new dataset type
-modify collate so leaf and path are also included in output dict
-add an equivalent to FairseqContextModel in fairseq/models/fairseq_model.py
-add an equivalent to FConvContextModel and FConvContextEncoder in fairseq/models/fconv.py (keep concatenation logic)
-add a custom encoder under fairseq/models which will implement code2seq
